{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\saiya\\\\Desktop\\\\reward-manager-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\saiya\\\\Desktop\\\\reward-manager-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\saiya\\\\Desktop\\\\reward-manager-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport fetch from './resource/dataService';\nimport ReactTable from 'react-table';\nimport \"./App.css\";\nimport \"./react-table.css\";\nimport _ from 'lodash';\n\nfunction calculateResults(incomingData) {\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const pointsPerTransaction = incomingData.map(transaction => {\n    let points = 0;\n    let over100 = transaction.amt - 100;\n\n    if (over100 > 0) {\n      points += over100 * 2;\n    }\n\n    if (transaction.amt > 50) {\n      points += 50;\n    }\n\n    const month = new Date(transaction.transactionDt).getMonth();\n    return _objectSpread({}, transaction, {\n      points,\n      month\n    });\n  });\n  let byCustomer = {};\n  let totalPointsByCustomer = {};\n  pointsPerTransaction.forEach(pointsPerTransaction => {\n    let custid = pointsPerTransaction.custid,\n        name = pointsPerTransaction.name,\n        month = pointsPerTransaction.month,\n        points = pointsPerTransaction.points;\n\n    if (!byCustomer[custid]) {\n      byCustomer[custid] = [];\n    }\n\n    if (!totalPointsByCustomer[custid]) {\n      totalPointsByCustomer[name] = 0;\n    }\n\n    totalPointsByCustomer[name] += points;\n\n    if (byCustomer[custid][month]) {\n      byCustomer[custid][month].points += points;\n      byCustomer[custid][month].monthNumber = month;\n      byCustomer[custid][month].numTransactions++;\n    } else {\n      byCustomer[custid][month] = {\n        custid,\n        name,\n        monthNumber: month,\n        month: months[month],\n        numTransactions: 1,\n        points\n      };\n    }\n  });\n  let tot = [];\n\n  for (var custKey in byCustomer) {\n    byCustomer[custKey].forEach(cRow => {\n      tot.push(cRow);\n    });\n  }\n\n  let totByCustomer = [];\n\n  for (custKey in totalPointsByCustomer) {\n    totByCustomer.push({\n      name: custKey,\n      points: totalPointsByCustomer[custKey]\n    });\n  }\n\n  return {\n    summaryByCustomer: tot,\n    pointsPerTransaction,\n    totalPointsByCustomer: totByCustomer\n  };\n}\n\nfunction App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        transactionData = _useState2[0],\n        setTransactionData = _useState2[1];\n\n  const columns = [{\n    Header: 'Reward Customer',\n    accessor: 'name'\n  }, {\n    Header: 'Month',\n    accessor: 'month'\n  }, {\n    Header: \"Number of Transactions\",\n    accessor: 'numTransactions'\n  }, {\n    Header: 'Total Reward Points',\n    accessor: 'points'\n  }];\n  const totalsByColumns = [{\n    Header: 'Reward Customer',\n    accessor: 'name'\n  }, {\n    Header: 'Earning Points',\n    accessor: 'points'\n  }];\n\n  function getIndividualTransactions(row) {\n    let byCustMonth = _.filter(transactionData.pointsPerTransaction, tRow => {\n      return row.original.custid === tRow.custid && row.original.monthNumber === tRow.month;\n    });\n\n    return byCustMonth;\n  }\n\n  useEffect(() => {\n    fetch().then(data => {\n      const results = calculateResults(data);\n      setTransactionData(results);\n    });\n  }, []);\n\n  if (transactionData == null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return transactionData == null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\",\n      marginBottom: \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      marginBottom: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"paper\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Rewards manager totals by customer months\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    className: \"-striped -highlight\",\n    showPagination: false,\n    resizable: false,\n    data: transactionData.summaryByCustomer,\n    defaultPageSize: 5,\n    columns: columns,\n    SubComponent: row => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, getIndividualTransactions(row).map(tran => {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Transaction Date:\"), \" \", tran.transactionDt, \" - \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"$\"), tran.amt, \" - \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Points: \"), tran.points)));\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"paper\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Rewards manager totals by customer\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    className: \"-striped -highlight\",\n    showPagination: false,\n    data: transactionData.totalPointsByCustomer,\n    columns: totalsByColumns,\n    defaultPageSize: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\saiya\\Desktop\\reward-manager-app\\src\\App.js"],"names":["React","useState","useEffect","fetch","ReactTable","_","calculateResults","incomingData","months","pointsPerTransaction","map","transaction","points","over100","amt","month","Date","transactionDt","getMonth","byCustomer","totalPointsByCustomer","forEach","custid","name","monthNumber","numTransactions","tot","custKey","cRow","push","totByCustomer","summaryByCustomer","App","transactionData","setTransactionData","columns","Header","accessor","totalsByColumns","getIndividualTransactions","row","byCustMonth","filter","tRow","original","then","data","results","marginTop","marginBottom","tran"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport fetch from './resource/dataService';\r\nimport ReactTable from 'react-table';\r\nimport \"./App.css\";\r\nimport \"./react-table.css\";\r\nimport _ from 'lodash';\r\n\r\nfunction calculateResults(incomingData) {\r\n \r\n const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n  const pointsPerTransaction = incomingData.map(transaction => {\r\n    let points = 0;\r\n    let over100 = transaction.amt - 100;\r\n\r\n    if (over100 > 0) {\r\n      points += (over100 * 2);\r\n    }\r\n    if (transaction.amt > 50) {\r\n      points += 50;\r\n    }\r\n    const month = new Date(transaction.transactionDt).getMonth();\r\n    return { ...transaction, points, month };\r\n  });\r\n\r\n  let byCustomer = {};\r\n  let totalPointsByCustomer = {};\r\n  pointsPerTransaction.forEach(pointsPerTransaction => {\r\n    let { custid, name, month, points } = pointsPerTransaction;\r\n    if (!byCustomer[custid]) {\r\n      byCustomer[custid] = [];\r\n    }\r\n    if (!totalPointsByCustomer[custid]) {\r\n      totalPointsByCustomer[name] = 0;\r\n    }\r\n    totalPointsByCustomer[name] += points;\r\n    if (byCustomer[custid][month]) {\r\n      byCustomer[custid][month].points += points;\r\n      byCustomer[custid][month].monthNumber = month;\r\n      byCustomer[custid][month].numTransactions++;\r\n    }\r\n    else {\r\n\r\n      byCustomer[custid][month] = {\r\n        custid,\r\n        name,\r\n        monthNumber: month,\r\n        month: months[month],\r\n        numTransactions: 1,\r\n        points\r\n      }\r\n    }\r\n  });\r\n  let tot = [];\r\n  for (var custKey in byCustomer) {\r\n    byCustomer[custKey].forEach(cRow => {\r\n      tot.push(cRow);\r\n    });\r\n  }\r\n\r\n  let totByCustomer = [];\r\n  for (custKey in totalPointsByCustomer) {\r\n    totByCustomer.push({\r\n      name: custKey,\r\n      points: totalPointsByCustomer[custKey]\r\n    });\r\n  }\r\n  return {\r\n    summaryByCustomer: tot,\r\n    pointsPerTransaction,\r\n    totalPointsByCustomer: totByCustomer\r\n  };\r\n}\r\n\r\nfunction App() {\r\n  const [transactionData, setTransactionData] = useState(null);\r\n\r\n  const columns = [\r\n    {\r\n      Header: 'Reward Customer',\r\n      accessor: 'name'\r\n    },\r\n    {\r\n      Header: 'Month',\r\n      accessor: 'month'\r\n    },\r\n    {\r\n      Header: \"Number of Transactions\",\r\n      accessor: 'numTransactions'\r\n    },\r\n    {\r\n      Header: 'Total Reward Points',\r\n      accessor: 'points'\r\n    }\r\n  ];\r\n  const totalsByColumns = [\r\n    {\r\n      Header: 'Reward Customer',\r\n      accessor: 'name'\r\n    },\r\n    {\r\n      Header: 'Earning Points',\r\n      accessor: 'points'\r\n    }\r\n  ]\r\n\r\n  function getIndividualTransactions(row) {\r\n    let byCustMonth = _.filter(transactionData.pointsPerTransaction, (tRow) => {\r\n      return row.original.custid === tRow.custid && row.original.monthNumber === tRow.month;\r\n    });\r\n    return byCustMonth;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch().then((data) => {\r\n      const results = calculateResults(data);\r\n      setTransactionData(results);\r\n    });\r\n  }, []);\r\n\r\n  if (transactionData == null) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return transactionData == null ?\r\n    <div>Loading...</div>\r\n    :\r\n    <div style={{ marginTop: \"10px\", marginBottom: \"50px\", }}>\r\n\r\n      <div style={{ marginBottom: \"30px\", }}>\r\n        <div className=\"col-12\" className=\"header\">\r\n          <paper>Rewards manager totals by customer months</paper>\r\n        </div>\r\n\r\n        <div  >\r\n          <div className=\"col-12\">\r\n            <ReactTable className=\"-striped -highlight\" showPagination={false} resizable={false} data={transactionData.summaryByCustomer} defaultPageSize={5} columns={columns}\r\n              SubComponent={row => {\r\n                return (\r\n                  <div>\r\n\r\n                    {getIndividualTransactions(row).map(tran => {\r\n                      return <div className=\"container\">\r\n                        <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                            <strong>Transaction Date:</strong> {tran.transactionDt} - <strong>$</strong>{tran.amt} - <strong>Points: </strong>{tran.points}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    })}\r\n\r\n                  </div>\r\n                )\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div >\r\n        <div className=\"col-12\" className=\"header\">\r\n          <paper>Rewards manager totals by customer</paper>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"col-12\">\r\n            <ReactTable className=\"-striped -highlight\" showPagination={false} data={transactionData.totalPointsByCustomer} columns={totalsByColumns} defaultPageSize={5}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    ;\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}